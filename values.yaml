# Default values for debezium-kafka-connect.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
namespace: debezium

image:
  registry: docker.io
  repository: debezium/connect
  tag: 3.0.0.Final
  pullPolicy: IfNotPresent

kafka:
  ssl:
    enabled: false

env:
  GROUP_ID: 01544
  CONFIG_STORAGE_TOPIC: debezium-connect-config
  OFFSET_STORAGE_TOPIC: debezium-connect-offset
  STATUS_STORAGE_TOPIC: debezium-connect-status
  BOOTSTRAP_SERVERS: 192.168.106.1:9092
  CONNECT_SECURITY_PROTOCOL: SSL
  CONNECT_SSL_TRUSTSTORE_LOCATION: "/var/private/ssl/kafka.client.truststore.jks"
  CONNECT_SSL_TRUSTSTORE_PASSWORD: "<truststore_password>"
  CONNECT_SSL_KEYSTORE_LOCATION: "/var/private/ssl/kafka.client.truststore.jks"
  CONNECT_SSL_KEYSTORE_PASSWORD: "<keystore_password>"
  CONNECT_PRODUCER_SECURITY_PROTOCOL: SSL
  CONNECT_PRODUCER_SSL_TRUSTSTORE_LOCATION: "/var/private/ssl/kafka.client.truststore.jks"
  CONNECT_PRODUCER_SSL_TRUSTSTORE_PASSWORD: "<truststore_password>"
  CONNECT_PRODUCER_SSL_KEYSTORE_LOCATION: "/var/private/ssl/kafka.client.truststore.jks"
  CONNECT_PRODUCER_SSL_KEYSTORE_PASSWORD: "<keystore_password>"
  CONNECT_CONSUMER_SECURITY_PROTOCOL: SSL
  CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: "/var/private/ssl/kafka.client.truststore.jks"
  CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD: "<truststore_password>"
  CONNECT_CONSUMER_SSL_KEYSTORE_LOCATION: "/var/private/ssl/kafka.client.truststore.jks"
  CONNECT_CONSUMER_SSL_KEYSTORE_PASSWORD: "<keystore_password>"
  CONNECT_MAX_BATCH_SIZE: 32768
  OFFSET_FLUSH_INTERVAL_MS: 10000
  OFFSET_FLUSH_TIMEOUT_MS: 60000
  HEAP_OPTS: "-Xms256M -Xmx1G"
  LOG_LEVEL: INFO

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8083

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 1
    memory: 1024Mi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
